apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources: [pods]
  verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: custom-metrics
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - image: prom/prometheus:v2.11.1
          name: prometheus
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
          args:
            - --config.file=/etc/config/prometheus.yml
            - --web.enable-lifecycle
          volumeMounts:
            - mountPath: /etc/config
              name: prometheus-config
#          readinessProbe:
#            httpGet:
#              path: /-/ready
#              port: 9090
#            initialDelaySeconds: 30
#          livenessProbe:
#            httpGet:
#              path: /-/healthy
#              port: 9090
#            initialDelaySeconds: 30
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: prometheus-config
data:
  prometheus.yml: ""
#    global:
#      scrape_interval: 10s
#    scrape_configs:
#      - job_name: autoscaling-pods
#        kubernetes_sd_configs:
#          - role: pod
#       relabel_configs:
#          - source_labels: [__meta_kubernetes_pod_label_app]
#            regex: autoscaling
#            action: keep
